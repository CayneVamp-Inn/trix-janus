Commands
  These modules primarily exist to add access to features already in the core

Commands::Chat
  Adds the "chatto" command, used to talk to a single network through chatops.

Commands::Core (autoloaded)
  Module load/unload commands

Commands::Debug
  Provides commands which show internal state information about janus

Commands::Eval
  Provides the ability to evaluate perl code in the janus process.
  This can cause many problems if abused.

Commands::Identify
  Provides "forceid" command for clientbot/services interaction

Commands::Link
  Link and delink channels. Since this is the primary use of janus,
  you probably want this loaded.

Commands::Network
  Commands to manipulate the connected networks and the server itself
  rehash - connects to split servers if autoconnect option is set
  restart - kills the janus server and restart it; "die" does not restart
  autoconnect - enables/disables the automatic retry on a given link block
  netsplit - disconnects a given network and reconnects
  list - shows current linked networks and channels

Commands::Request
  Provides the "request" command to view and manipulate channel link requests

Commands::Save
  Saves janus state to the filesystem on request

Commands::Time
  Requests a time report from all connected servers

Commands::Verify
  Runs internal state checks to determine if corruption has occurred.
  (debugging tool)

Modules
  These primarily exist as independent pieces of functionality that can be
  added to janus.

Modules::Ban
  Allows per-network bans of specific expressions matching users. Causes an
  auto-kick when the user joins a remote channel.

Modules::LogRotate
  Rotates the janus logs every time it is reloaded so they do not grow too large.

Modules::Quarrantine (EXPERIMENTAL)
  Prevents opers and other network's services from changing modes in a shared
  channel if that channel has been claimed to certain home network(s)

Modules::Signals
  Rehashes the janus server on reciept of a SIGHUP.
  (more signals may be added later)

Modules::Silence
  Prevents communcation to and from remote services, and prevents services kills
  from being translated into kicks unless they are repeated.

Modules::Spamfilter (EXPERIMENTAL)
  Kills users sending a message matching a hardcoded regular expression

Modules::WhoisFilter
  Filters the /whois notification sent for remote nicks.
