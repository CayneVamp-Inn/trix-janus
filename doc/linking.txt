Linking

Linking two channels is a fairly complex procedure because of the possible information hiding that interjanus provides.
This is an annotated example, linking t1#foo to t2#bar

On t2, someone authorized types /msg janus link #bar t1 #foo

<LINKREQ dlink="#foo" dst=s:t1 net=s:t2 sendto=<a s:t1> slink="#bar" src=n:t2:2>

This is sent to network t1, and since t1 has not requested a link of this channel, nothing happens.
The network t2 rememebers that it has requested the link.

On t1, someone authorized types /msg janus link #foo t2 #bar

<LINKREQ dlink="#bar" dst=s:t2 net=s:t1 override="1" sendto=<a s:t2> slink="#foo" src=n:t1:2>

This is sent to network t2, and t2 finds this link in its cache. t2 replies to t1:

<LSYNC dst=s:t1 linkto="#foo" chan=<c keyname="t2#bar" ts="1182731566" topic= topicts="0" topicset= mode=<h> names=<h t2="#bar">>>

When t1 receives this message, it will create the data structures for t2#bar (which it may not have known existed) and merge
the channels - checking creation timestamps, modes, topics, etc.

<TIMESYNC dst=c:t2#bar ts="1182720491">

Because t2#bar was created after t1#foo, the timestamp is reset before linking. This will not happen if the channels have
been previously linked and neither network has emptied the channel since then.

<LINK chan1=c:t1#foo chan2=c:t2#bar dst=<c keyname="t1#foo" ts="1182720491" topic= topicts="0" topicset= mode=<h> names=<h t1="#foo" t2="#bar">>>

The broadcast merge of channels. All networks take the new channel given and merge users into it.

<JOIN dst=c:t1#foo mode=<h n_op="1"> rejoin="1" src=n:t1:2>
<JOIN dst=c:t1#foo mode= rejoin="1" src=n:t2:2>

The JOIN action is sent from the home IJ server of the users.

The LINK action also causes a topic and mode change on all local networks. These changes are not sent across interjanus links 
to help avoid race conditions, and to save bandwidth. The channel information send along with the LINK action is the new 'master'
information.
